{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","newMovieHandler","useState","setMovie","query","setQuery","isLoading","setIsLoading","isError","setIsError","onSubmit","event","preventDefault","fetch","then","res","json","catch","error","Response","Error","getMovie","newMovie","data","Title","Plot","imdbID","Poster","addNewMovie","finally","htmlFor","type","id","value","placeholder","onChange","target","classNames","disabled","length","onClick","App","setMovies","currentMovie","find","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cfc449c.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import {\n  ChangeEvent,\n  FC,\n  FormEvent,\n  useState,\n} from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  newMovieHandler: (movie: Movie) => void;\n}\n\nexport const FindMovie: FC<Props> = ({ newMovieHandler }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  const addNewMovie = (data: MovieData | ResponseError) => {\n    if ('Error' in data) {\n      throw new Error(data.Error);\n    }\n\n    setMovie({\n      title: data.Title,\n      description: data.Plot,\n      imdbId: data.imdbID,\n      imgUrl: data.Poster,\n      imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n    });\n  };\n\n  const handleOnSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n    getMovie(query)\n      .then(newMovie => {\n        addNewMovie(newMovie);\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsError(false);\n  };\n\n  const handleOnClick = () => {\n    if (movie) {\n      newMovieHandler(movie);\n      setQuery('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleOnSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              value={query}\n              placeholder=\"Enter a title to search\"\n              onChange={handleOnChange}\n              className=\"input is-dander\"\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={query.length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleOnClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2c83123';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch((error) => ({\n      Response: 'False',\n      Error: error,\n    }));\n}\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const findNewMovie = (newMovie: Movie) => {\n    setMovies(currentMovie => {\n      const isCurrentMovieInList = currentMovie.find(item => (\n        item.imdbId === newMovie.imdbId\n      ));\n\n      if (!isCurrentMovieInList) {\n        return [...currentMovie, newMovie];\n      }\n\n      return currentMovie;\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie newMovieHandler={findNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}